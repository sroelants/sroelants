---
import PageLayout from "../../layouts/PageLayout.astro";
import ArchiveEntry from "../../components/ArchiveEntry.astro";

type PostFrontmatter = {
  title: string;
  author: string;
  date: string;
  description: string;
  tags: string[];
}

type EntryData = {
  title: string;
  date: string;
  description: string;
  tags: string[];
  url: string;
};


export const getStaticPaths = async () => {
  const allPosts = await Astro.glob<PostFrontmatter>('../posts/*.md');
  const tags = new Set(allPosts.flatMap(post => post.frontmatter.tags ?? []));

  return Array.from(tags).map(tag => { 
    return {
      params: { tag },
      props: { 
        posts: allPosts.filter(p => p.frontmatter.tags?.includes(tag))
      }
    }
  });
};

const { tag } = Astro.params;
const { posts } = Astro.props;

const entries: EntryData[] = posts.map(post => ({
  title: post.frontmatter.title,
  date: post.frontmatter.date,
  description: post.frontmatter.description,
  tags: post.frontmatter.tags,
  url: post.url
}));

---
<PageLayout>
<h2>Tagged with "{tag}"</h2>
  {entries
    .sort((p1, p2) => p1.date > p2.date ? 1 : -1)
    .reverse()
    .map(entry => <ArchiveEntry entry={entry} />)}
</PageLayout>
