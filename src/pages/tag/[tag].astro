---
import PageLayout from "../../layouts/PageLayout.astro";
import ArchiveEntry from "../../components/ArchiveEntry.astro";
import type { InferGetStaticParamsType, InferGetStaticPropsType } from "astro";
import { getCollection } from "astro:content";

type Props = InferGetStaticPropsType<typeof getStaticPaths>;
type Params = InferGetStaticParamsType<typeof getStaticPaths>;

const { tag } = Astro.params as Params;
const { posts }: Props = Astro.props;

export const getStaticPaths = async () => {
  const posts = await getCollection("posts");
  const tags = new Set(posts.flatMap(post => post.data.tags ?? []));

  return Array.from(tags).map(tag => { 
    return {
      params: { tag },
      props: { 
        posts: posts
          .filter(post => post.data.tags.includes(tag))
          .map(post => ({
            title: post.data.title,
            date: post.data.date,
            description: post.data.description,
            url: post.slug,
            tags: post.data.tags,
          }))
      }
    }
  });
};
---
<PageLayout>
<h2>Tagged with "{tag}"</h2>
  {posts
    .sort((p1, p2) => p1.date > p2.date ? 1 : -1)
    .reverse()
    .map(post => <ArchiveEntry entry={post} />)}
</PageLayout>
