var acHandler,backspaceHandler,buttonHandler,clearErrorBox,currEl,el,eqHandler,evalString,exprEl,exprString,i,lbHandler,len,numberHandler,operationHandler,putErrorBox,rbHandler,re,ref,unpaired;for(exprEl=document.getElementsByClassName("expr")[0],currEl=document.getElementsByClassName("current")[0],exprString="",evalString="",re=/([0-9.]*)\D*$/,ref=document.getElementsByClassName("button"),i=0,len=ref.length;i<len;i++)el=ref[i],el.addEventListener("click",function(r){return buttonHandler(r.target.textContent)});buttonHandler=function(r){switch(r){case"⌫":backspaceHandler();break;case"AC":acHandler();break;case"=":eqHandler(r);break;case"−":case"×":case"+":case"÷":operationHandler(r);break;case"(":lbHandler();break;case")":rbHandler();break;default:numberHandler(r)}return exprEl.textContent=exprString},numberHandler=function(r){return")"===exprString.slice(-1)?void putErrorBox("Don't input a number directly after a closing bracket."):(clearErrorBox(),exprString+=r,evalString+=r,currEl.textContent=exprString.match(re)[1])},operationHandler=function(r){var e;if("−"===r&&"−"===exprString.slice(-1))return void putErrorBox("Don't use two consecutive minus signs");if(""===exprString.slice(-1)&&("×"===r||"+"===r||"÷"===r))return void putErrorBox("Don't begin expression with an operator other than a minus sign.");if(!("×"!==r&&"+"!==r&&"÷"!==r||"−"!==(e=exprString.slice(-1))&&"×"!==e&&"+"!==e&&"÷"!==e&&"("!==e))return void putErrorBox("Operators should be used between two legal expressions.");switch(clearErrorBox(),exprString+=r,r){case"+":return evalString+="+";case"×":return evalString+="*";case"÷":return evalString+="/";case"−":return evalString+="-"}},lbHandler=function(){var r;return"+"===(r=evalString.slice(-1))||"-"===r||"*"===r||"/"===r||"("===r||""===evalString.slice(-1)?(clearErrorBox(),exprString+="(",evalString+="("):putErrorBox("Don't place an opening bracket after a number or closing bracket.")},rbHandler=function(){var r;return"+"===(r=evalString.slice(-1))||"-"===r||"*"===r||"/"===r||"("===r?void putErrorBox("Parentheses should encompass a legal expression. Don't end on an operator."):0===unpaired(evalString)?void putErrorBox("No matching opening parentheses found."):(clearErrorBox(),exprString+=")",evalString+=")")},acHandler=function(){return clearErrorBox(),exprString="",evalString="",currEl.textContent=""},eqHandler=function(ch){var ref1,result;return 0!==unpaired(evalString)?void putErrorBox("Unpaired parenthesis left in expression."):"+"===(ref1=evalString.slice(-1))||"-"===ref1||"*"===ref1||"/"===ref1||"("===ref1?void putErrorBox("Only legal expressions can be evaluated. Don't end on an operator or opening parenthesis."):(clearErrorBox(),result=eval(evalString),currEl.textContent=result,exprString="",evalString="")},backspaceHandler=function(){return clearErrorBox(),exprString=exprString.slice(0,-1),evalString=evalString.slice(0,-1),currEl.textContent=exprString.match(re)[1]},unpaired=function(r){var e,n,t,a;return e=r.match(/\(/g),a=r.match(/\)/g),n=null!=e?e.length:0,t=null!=a?a.length:0,n-t},putErrorBox=function(r){var e,n,t,a;return clearErrorBox(),a=document.getElementsByClassName("wrapper")[0],n=document.createElement("div"),e=document.createTextNode(r),n.appendChild(e),n.classList.add("error"),a.appendChild(n),t=function(){return n.classList.add("visible")},setTimeout(t,100)},clearErrorBox=function(){var r,e,n;if(n=document.getElementsByClassName("wrapper")[0],e=n.getElementsByClassName("error")[0],null!=e)return e.classList.remove("visible"),r=function(){return n.removeChild(e)},setTimeout(r,500)};